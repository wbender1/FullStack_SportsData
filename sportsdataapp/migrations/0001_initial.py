# Generated by Django 5.2.7 on 2025-10-07 20:40

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('num_competitions', models.IntegerField()),
                ('code', models.CharField(blank=True, max_length=10, null=True)),
                ('flag', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('api_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=15)),
                ('logo', models.URLField()),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsdataapp.country')),
            ],
            options={
                'verbose_name': 'Competition',
                'verbose_name_plural': 'Competitions',
            },
        ),
        migrations.CreateModel(
            name='Fixture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referee', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('short_status', models.CharField(max_length=15)),
                ('elapsed', models.IntegerField(blank=True, null=True)),
                ('round', models.CharField(max_length=100)),
                ('home_goals', models.IntegerField(blank=True, null=True)),
                ('away_goals', models.IntegerField(blank=True, null=True)),
                ('half_home_goals', models.IntegerField(blank=True, null=True)),
                ('half_away_goals', models.IntegerField(blank=True, null=True)),
                ('full_home_goals', models.IntegerField(blank=True, null=True)),
                ('full_away_goals', models.IntegerField(blank=True, null=True)),
                ('et_home_goals', models.IntegerField(blank=True, null=True)),
                ('et_away_goals', models.IntegerField(blank=True, null=True)),
                ('pen_home_goals', models.IntegerField(blank=True, null=True)),
                ('pen_away_goals', models.IntegerField(blank=True, null=True)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsdataapp.competition')),
            ],
            options={
                'verbose_name': 'Fixture',
                'verbose_name_plural': 'Fixtures',
            },
        ),
        migrations.CreateModel(
            name='FixtureStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home_sh_on_goal', models.IntegerField(blank=True, null=True)),
                ('home_sh_off_goal', models.IntegerField(blank=True, null=True)),
                ('home_total_sh', models.IntegerField(blank=True, null=True)),
                ('home_blocked_sh', models.IntegerField(blank=True, null=True)),
                ('home_sh_inside', models.IntegerField(blank=True, null=True)),
                ('home_sh_outside', models.IntegerField(blank=True, null=True)),
                ('home_fouls', models.IntegerField(blank=True, null=True)),
                ('home_corners', models.IntegerField(blank=True, null=True)),
                ('home_offsides', models.IntegerField(blank=True, null=True)),
                ('home_possession', models.CharField(blank=True, max_length=20, null=True)),
                ('home_yellows', models.IntegerField(blank=True, null=True)),
                ('home_reds', models.IntegerField(blank=True, null=True)),
                ('home_saves', models.IntegerField(blank=True, null=True)),
                ('home_tot_passes', models.IntegerField(blank=True, null=True)),
                ('home_accurate_pass', models.IntegerField(blank=True, null=True)),
                ('home_percent_pass', models.CharField(blank=True, max_length=20, null=True)),
                ('home_ex_goals', models.CharField(blank=True, max_length=20, null=True)),
                ('away_sh_on_goal', models.IntegerField(blank=True, null=True)),
                ('away_sh_off_goal', models.IntegerField(blank=True, null=True)),
                ('away_total_sh', models.IntegerField(blank=True, null=True)),
                ('away_blocked_sh', models.IntegerField(blank=True, null=True)),
                ('away_sh_inside', models.IntegerField(blank=True, null=True)),
                ('away_sh_outside', models.IntegerField(blank=True, null=True)),
                ('away_fouls', models.IntegerField(blank=True, null=True)),
                ('away_corners', models.IntegerField(blank=True, null=True)),
                ('away_offsides', models.IntegerField(blank=True, null=True)),
                ('away_possession', models.CharField(blank=True, max_length=20, null=True)),
                ('away_yellows', models.IntegerField(blank=True, null=True)),
                ('away_reds', models.IntegerField(blank=True, null=True)),
                ('away_saves', models.IntegerField(blank=True, null=True)),
                ('away_tot_passes', models.IntegerField(blank=True, null=True)),
                ('away_accurate_pass', models.IntegerField(blank=True, null=True)),
                ('away_percent_pass', models.CharField(blank=True, max_length=20, null=True)),
                ('away_ex_goals', models.CharField(blank=True, max_length=20, null=True)),
                ('fixture', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='sportsdataapp.fixture')),
            ],
            options={
                'verbose_name': 'Fixture Stats',
                'verbose_name_plural': 'Fixture Stats',
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsdataapp.competition')),
            ],
            options={
                'verbose_name': 'Season',
                'verbose_name_plural': 'Seasons',
            },
        ),
        migrations.AddField(
            model_name='fixture',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsdataapp.season'),
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('api_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('short_name', models.CharField(blank=True, max_length=10, null=True)),
                ('founded', models.IntegerField(blank=True, null=True)),
                ('national', models.BooleanField(default=False)),
                ('logo_url', models.URLField(blank=True, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsdataapp.country')),
            ],
            options={
                'verbose_name': 'Team',
                'verbose_name_plural': 'Teams',
            },
        ),
        migrations.CreateModel(
            name='Standing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField()),
                ('points', models.IntegerField()),
                ('goals_for', models.IntegerField()),
                ('goals_against', models.IntegerField()),
                ('goal_diff', models.IntegerField()),
                ('played', models.IntegerField()),
                ('wins', models.IntegerField()),
                ('draws', models.IntegerField()),
                ('losses', models.IntegerField()),
                ('home_goals_for', models.IntegerField()),
                ('home_goals_against', models.IntegerField()),
                ('home_goal_diff', models.IntegerField()),
                ('home_played', models.IntegerField()),
                ('home_wins', models.IntegerField()),
                ('home_draws', models.IntegerField()),
                ('home_losses', models.IntegerField()),
                ('away_goals_for', models.IntegerField()),
                ('away_goals_against', models.IntegerField()),
                ('away_goal_diff', models.IntegerField()),
                ('away_played', models.IntegerField()),
                ('away_wins', models.IntegerField()),
                ('away_draws', models.IntegerField()),
                ('away_losses', models.IntegerField()),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsdataapp.season')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsdataapp.team')),
            ],
            options={
                'verbose_name': 'Standings',
                'verbose_name_plural': "Standings'",
            },
        ),
        migrations.AddField(
            model_name='fixture',
            name='away_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_fixtures', to='sportsdataapp.team'),
        ),
        migrations.AddField(
            model_name='fixture',
            name='home_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_fixtures', to='sportsdataapp.team'),
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('api_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=150, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('surface', models.CharField(blank=True, max_length=50, null=True)),
                ('image', models.URLField(blank=True, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsdataapp.country')),
            ],
            options={
                'verbose_name': 'Venue',
                'verbose_name_plural': 'Venues',
            },
        ),
        migrations.CreateModel(
            name='TeamSeasonCompetition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsdataapp.competition')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsdataapp.season')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsdataapp.team')),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsdataapp.venue')),
            ],
        ),
        migrations.AddField(
            model_name='fixture',
            name='venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sportsdataapp.venue'),
        ),
    ]
